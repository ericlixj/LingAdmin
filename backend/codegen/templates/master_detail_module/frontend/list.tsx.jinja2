import {
  EditButton,
  FilterDropdown,
  List,
  ShowButton,
  useTable,
} from "@refinedev/antd";
import { Input, Select, Space, Table, DatePicker  } from "antd";
import dayjs from "dayjs";

export const {{ class_name }}List = () => {
  const { tableProps, filters } = useTable({
    syncWithLocation: true,
    filters: {
      mode: "server",
    },
  });

  return (
    <List>
      <Table {...tableProps} rowKey="id">
        <Table.Column dataIndex="id" title="ID" sorter />

{% for field in fields if not field.common and field.name != "id" %}
        <Table.Column
          dataIndex="{{ field.name }}"
          title="{{ field.description or field.name.capitalize() }}"
          {% if field.sortable %}
          sorter
          {% endif %}
          {% if field.queryable %}
          filterDropdown={(props) => (
            <FilterDropdown {...props}>
              {% if field.form_type in ["select", "radio"] and field.options %}
              <Select
                allowClear
                showSearch
                placeholder="请选择{{ field.description or field.name }}"
                {% raw %}
                style={{ minWidth: 150 }}
                {% endraw %}
                options={ {{ field.options | tojson | safe }} }
                value={props.selectedKeys[0]}
                onChange={(value) =>
                  props.setSelectedKeys(value ? [value] : [])
                }
                onBlur={() => props.confirm()}
              />
              {% elif field.form_type == "date" %}
              <DatePicker.RangePicker
                {% raw %}
                style={{ width: '100%' }}
                {% endraw %}
                value={props.selectedKeys[0]}
                onChange={(dates) => {
                  props.setSelectedKeys(dates ? [dates] : []);
                }}
                onOk={() => props.confirm()}
              />
              {% else %}
              <Input
                placeholder="搜索{{ field.description or field.name }}"
                value={(props.selectedKeys[0] as string) || ""}
                onChange={(e) =>
                  props.setSelectedKeys(e.target.value ? [e.target.value] : [])
                }
                onPressEnter={() => props.confirm()}
                onBlur={() => props.confirm()}
              />
              {% endif %}
            </FilterDropdown>
          )}
          filteredValue={
            (filters.find((f) => f.field === "{{ field.name }}")?.value as any[]) || null
          }
          {% endif %}

          render={(value) => {
            {% if field.form_type == "select" and field.options %}
            const option = {{ field.options | tojson }}.find(opt => opt.value === value);
            return option ? option.label : value;
            {% elif field.form_type == "checkbox" and field.options %}
            if (!value) return "";
            const values = Array.isArray(value) ? value : String(value).split(",");
            const labels = values.map(v => {
              const opt = {{ field.options | tojson }}.find(o => String(o.value) === String(v).trim());
              return opt ? opt.label : v;
            });
            return labels.join(", ");
            {% elif field.form_type == "date" %}
            return value ? dayjs(value).format("YYYY-MM-DD") : "";
            {% else %}
            return value;
            {% endif %}
          }}
        />
{% endfor %}

        <Table.Column
          title="操作"
          render={(_, record) => (
            <Space>
              <EditButton recordItemId={record.id} />
              <ShowButton recordItemId={record.id} >子表管理</ShowButton>
            </Space>
          )}
        />
      </Table>
    </List>
  );
};
