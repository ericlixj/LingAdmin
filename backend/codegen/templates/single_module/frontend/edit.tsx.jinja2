import { useState, useEffect } from "react";
import dayjs from "dayjs";
import { Edit, useForm } from "@refinedev/antd";
import { Form, Input, Select, Checkbox, DatePicker, Spin } from "antd";

const fields = {{ fields | tojson }};

function prepareInitialValues(record: Record<string, any>, fields: any[]) {
  const result: Record<string, any> = {};
  fields.forEach((field) => {
    const value = record[field.name];
    if (field.form_type === "date") {
      result[field.name] = value ? dayjs(value) : null;
    } else if (field.form_type === "checkbox" && field.options) {
      result[field.name] = value ? value.split(",").map((v: string) => Number(v.trim())) : [];
    } else if (field.form_type === "select") {
      result[field.name] = String(value);
    } else {
      result[field.name] = value;
    }
  });
  return result;
}

export const {{ class_name }}Edit = () => {
  const { formProps, saveButtonProps, queryResult } = useForm();
  const [initialized, setInitialized] = useState(false);

  const record = queryResult?.data?.data;
  const form = formProps?.form;
  useEffect(() => {
    if (!initialized && record && form && !form.isFieldsTouched()) {
      form.setFieldsValue(prepareInitialValues(record, fields));
      setInitialized(true);
    }
  }, [initialized, queryResult?.data?.data]);

  const handleFinish = (values: any) => {
    const processed = {
      ...values,
      {% for field in fields if field.form_type == "checkbox" and field.options %}
      {{ field.name }}: (values.{{ field.name }} || []).join(","),{% endfor %}
    };
    return formProps.onFinish?.(processed);
  };

  // 这里判断是否加载完成，避免组件内部访问未定义数据
  {% raw %}
  if (queryResult?.isLoading || !record || !form || !initialized) {
    return <Spin size="large" style={{ display: "block", margin: "100px auto" }} />;
  }
  {% endraw %}
  return (
    <Edit saveButtonProps={saveButtonProps}>
      <Form {...formProps} layout="vertical" onFinish={handleFinish}>
        {% for field in fields if not field.common %}
        <Form.Item
          name="{{ field.name }}"
          label="{{ field.description if field.description else field.name | capitalize }}"
          {% if field.form_type == 'checkbox' and not field.options %} valuePropName="checked" {% endif %}
          rules={[
            {% if field.required %}{ required: true, message: '请输入{{ field.description or field.name }}' },{% endif %}
            {% if field.type == 'str' and field.max_length and field.max_length > 0 %}
            { max: {{ field.max_length }}, message: '最多输入 {{ field.max_length }} 个字符' },
            {% endif %}
          ]}
        >
          {% if field.form_type == "textarea" %}
            <Input.TextArea rows={4} />
          {% elif field.form_type == "select" and field.options %}
            <Select>
              {% for option in field.options %}
                <Select.Option value="{{ option.value }}">{{ option.label }}</Select.Option>
              {% endfor %}
            </Select>
          {% elif field.form_type == "checkbox" and field.options %}
            <Checkbox.Group
              options={[
                {% for option in field.options %}
                  { label: "{{ option.label }}", value: {{ option.value }} }{% if not loop.last %}, {% endif %}
                {% endfor %}
              ]}
            />
          {% elif field.form_type == "date" %}
            {% raw %}
            <DatePicker style={{ width: "100%" }} />
            {% endraw %}
          {% else %}
            <Input />
          {% endif %}
        </Form.Item>
        {% endfor %}
      </Form>

    </Edit>
  );
};
